name: Build Photo JSON by Trip

on:
  push:
    paths:
      - 'photos/**.j*'
      - '.github/workflows/build-photos-json.yml'
  workflow_dispatch:

jobs:
  generate-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install exifr
        run: npm install exifr

      - name: Generate photos.json grouped by trip
        run: |
          node <<'EOF'
          const fs = require('fs');
          const path = require('path');
          const exifr = require('exifr');

          const root = 'photos';
          const trips = {};

          function walkDir(dir) {
            let files = [];
            for (const f of fs.readdirSync(dir)) {
              const fullPath = path.join(dir, f);
              if (fs.statSync(fullPath).isDirectory()) {
                files = files.concat(walkDir(fullPath));
              } else if (/\.(jpe?g)$/i.test(f)) {
                files.push(fullPath);
              }
            }
            return files;
          }

          async function generate() {
            const files = walkDir(root);
            for (const filePath of files) {
              const relPath = filePath.replace(/^photos[\\/]/, '').replace(/\\/g, '/');
              const tripName = relPath.split('/')[0];
              if (!trips[tripName]) trips[tripName] = [];

              try {
                const metadata = await exifr.parse(filePath, { gps: true, tiff: true });
                const entry = {
                  path: `photos/${relPath}`,
                  caption: '',
                  lat: metadata?.latitude ?? null,
                  lon: metadata?.longitude ?? null,
                  datetime: metadata?.DateTimeOriginal?.toISOString?.().replace('T', ' ').slice(0, 19) ?? null,
                };
                trips[tripName].push(entry);
              } catch (err) {
                console.warn(`Error parsing ${filePath}:`, err.message);
              }
            }

            fs.writeFileSync('photos.json', JSON.stringify(trips, null, 2));
            console.log('âœ… photos.json generated!');
          }

          generate();
          EOF

      - name: Commit updated photos.json
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add photos.json
          git commit -m "Update photos.json grouped by trip" || echo "No changes to commit"
          git push
